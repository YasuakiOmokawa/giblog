.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Giblog 3"
.TH Giblog 3 "2019-03-23" "perl v5.20.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Giblog \- Blog builder for git generation
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Giblog is \fBBlog builder\fR written by Perl language.
.PP
You can create \fByour onw website and blog\fR easily.
.PP
All created files is static \s-1HTML,\s0 so you can manage them using git.
.PP
Giblog is in beta test before 1.0 release. Note that features is changed without warnings.
.SH "SYNOPSYS"
.IX Header "SYNOPSYS"
.Vb 2
\&  # New empty web site
\&  giblog new mysite
\&
\&  # New web site
\&  giblog new_website mysite
\&
\&  # New blog
\&  giblog new_blog mysite
\&  
\&  # Change directory
\&  cd mysite
\&  
\&  # Add new entry
\&  giblog add
\&
\&  # Build web site
\&  giblog build
\&  
\&  # Serve web site(need Mojolicious)
\&  morbo serve.pl
\&
\&  # Add new entry with home directory
\&  giblog add \-\-home /home/kimoto/mysite
\&  
\&  # Build web site with home directory
\&  giblog build \-\-home /home/kimoto/mysite
.Ve
.SH "FEATURES"
.IX Header "FEATURES"
Giblog have the following features.
.IP "\(bu" 4
Build both website and blog.
.IP "\(bu" 4
Linux, Mac \s-1OS,\s0 Windows Support. (In Windows, recommend installation of msys2)
.IP "\(bu" 4
Default \s-1CSS\s0 for smart phone site
.IP "\(bu" 4
Content is wrapped by top section, bottom section, header, footer, \s-1HTML\s0 head, and side var.
.IP "\(bu" 4
Add p tag automatically. Escape <, > automatically in pre tag
.IP "\(bu" 4
Set title tag automatically from text of first h1\-h6 tag.
.IP "\(bu" 4
Set meta description tag automatically from text of first p tag.
.IP "\(bu" 4
You can use above all features or choice some of them, and can add more advanced features.
.IP "\(bu" 4
In advanced features, you can customize list of entries page, use markdown syntax, and add twitter card, etc.
.IP "\(bu" 4
Build 645 pages by 0.78 seconds in my starndard linux environment.
.IP "\(bu" 4
Use JavaScript. Display the ad
.IP "\(bu" 4
You can manage files by git easily, and deploy them to rental server.
.IP "\(bu" 4
If you use Github Pages, you can create https web site for free.
.IP "\(bu" 4
Giblog is used to build Perl Zemi web site.
.SH "TUTORIAL"
.IX Header "TUTORIAL"
.SS "Create web site"
.IX Subsection "Create web site"
You can create web site from 3 prototype.
.PP
\&\fB1. Empty website\fR
.PP
\&\*(L"new\*(R" command create empty website. \*(L"mysite\*(R" is a exapmle name of your web site.
.PP
.Vb 1
\&  giblog new mysite
.Ve
.PP
If you want to create empty site, choice this prototype.
.PP
Templates and \s-1CSS\s0 is empty and provide minimal build process.
.PP
\&\fB2. Website\fR
.PP
\&\*(L"new_website\*(R" command create empty website.
.PP
.Vb 1
\&  giblog new_website mysite
.Ve
.PP
If you want to create simple website, choice this prototype.
.PP
Template of top page \*(L"templates/index.html\*(R" is created. \s-1CSS\s0 is designed to match smart phone site and provide basic build process.
.PP
\&\fB3. Blog\fR
.PP
\&\*(L"new_blog\*(R" command create empty website.
.PP
.Vb 1
\&  giblog new_blog mysite
.Ve
.PP
If you want to create blog, choice this prototype.
.PP
Have page \*(L"templates/index.html\*(R" which show 7 days entry.
.PP
Have page \*(L"templates/list.html\*(R" which show all page links.
.PP
\&\s-1CSS\s0 is designed to match smart phone site and provide basic build process.
.SS "Add entry page"
.IX Subsection "Add entry page"
\&\*(L"add\*(R" command add blog entry page.
.PP
.Vb 1
\&  giblog add
.Ve
.PP
You need to change directory to \*(L"mysite\*(R" before run \*(L"add\*(R" command.
.PP
.Vb 1
\&  cd mysite
.Ve
.PP
If you use \*(L"\-\-home\*(R" option, you don't need to change directory
.PP
.Vb 1
\&  giblog add \-\-home /home/kimoto/mysite
.Ve
.PP
Created file name is, for example,
.PP
.Vb 1
\&  templates/blog/20080108132865.html
.Ve
.PP
This file name contains current date and time.
.SS "Build web site"
.IX Subsection "Build web site"
\&\*(L"build\*(R" command build web site.
.PP
.Vb 1
\&  giblog build
.Ve
.PP
You need to change directory to \*(L"mysite\*(R" before run \*(L"build\*(R" command.
.PP
.Vb 1
\&  cd mysite
.Ve
.PP
If you use \*(L"\-\-home\*(R" option, you don't need to change directory.
.PP
.Vb 1
\&  giblog build \-\-home /home/kimoto/mysite
.Ve
.PP
What is build process?
.PP
Build process is writen in \*(L"run\*(R" method of \*(L"lib/Giblog/Command/build.pm\*(R".
.PP
Main part of build process is combination of Giblog::API.
.PP
.Vb 2
\&  # "lib/Giblog/Command/build.pm" in web site created by "new_blog" command
\&  package Giblog::Command::build;
\&
\&  use base \*(AqGiblog::Command\*(Aq;
\&
\&  use strict;
\&  use warnings;
\&
\&  use File::Basename \*(Aqbasename\*(Aq;
\&
\&  sub run {
\&    my ($self, @args) = @_;
\&    
\&    # API
\&    my $api = $self\->api;
\&    
\&    # Read config
\&    my $config = $api\->read_config;
\&    
\&    # Get files in templates directory
\&    my $files = $api\->get_templates_files;
\&    
\&    for my $file (@$files) {
\&      # Data
\&      my $data = {file => $file};
\&      
\&      # Get content from file in templates directory
\&      $api\->get_content($data);
\&
\&      # Parse Giblog syntax
\&      $api\->parse_giblog_syntax($data);
\&
\&      # Parse title
\&      $api\->parse_title_from_first_h_tag($data);
\&
\&      # Add page link
\&      $api\->add_page_link_to_first_h_tag($data, {root => \*(Aqindex.html\*(Aq});
\&
\&      # Parse description
\&      $api\->parse_description_from_first_p_tag($data);
\&
\&      # Read common templates
\&      $api\->read_common_templates($data);
\&      
\&      # Add meta title
\&      $api\->add_meta_title($data);
\&
\&      # Add meta description
\&      $api\->add_meta_description($data);
\&
\&      # Build entry html
\&      $api\->build_entry($data);
\&      
\&      # Build whole html
\&      $api\->build_html($data);
\&      
\&      # Write to public file
\&      $api\->write_to_public_file($data);
\&    }
\&    
\&    # Create index page
\&    $self\->create_index;
\&    
\&    # Create list page
\&    $self\->create_list;
\&  }
.Ve
.PP
\&\*(L"run\*(R" method read all template files in \*(L"templates\*(R" directory, and edit them, and wrtie output to file in \*(L"public\*(R" directory.
.PP
You can edit this build process by yourself if you need.
.PP
If you need to understand APIs in run method, see Giblog::API.
.SS "Serve web site"
.IX Subsection "Serve web site"
If you have Mojolicious, you can build and serve web site.
.PP
.Vb 1
\&   morbo serve.pl
.Ve
.PP
You see the following message.
.PP
.Vb 2
\&   Server available at http://127.0.0.1:3000
\&   Server start
.Ve
.PP
If files in \*(L"templates\*(R" directory is updated, web site is build and this server is reloaded automatically.
.SH "METHODS"
.IX Header "METHODS"
These methods is internally methods.
.PP
Don't need to know these methods except for Giblog developer.
.PP
See Giblog::API to manipulate \s-1HTML\s0 contents.
.SS "new"
.IX Subsection "new"
.Vb 1
\&  my $api = Giblog\->new(%params);
.Ve
.PP
Create Giblog object.
.PP
\&\fBParameters:\fR
.IP "\(bu" 4
home_dir \- home directory
.IP "\(bu" 4
config \- config
.SS "run_command"
.IX Subsection "run_command"
.Vb 1
\&  $giblog\->run_command(@argv);
.Ve
.PP
Run command system.
.SS "config"
.IX Subsection "config"
.Vb 1
\&  my $config = $giblog\->config;
.Ve
.PP
Get Giblog config.
.SS "home_dir"
.IX Subsection "home_dir"
.Vb 1
\&  my $home_dir = $giblog\->home_dir;
.Ve
.PP
Get home directory.
.SH "AUTHOR"
.IX Header "AUTHOR"
Yuki Kimoto, \f(CW\*(C`<kimoto.yuki at gmail.com>\*(C'\fR
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2018 Yuki Kimoto.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:
.PP
<http://www.perlfoundation.org/artistic_license_2_0>
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 158:" 4
.IX Item "Around line 158:"
Unknown directive: =imte
